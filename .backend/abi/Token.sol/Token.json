{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ticker",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000cf938038062000cf983398101604081905262000034916200028f565b83836003620000448382620003b3565b506004620000538282620003b3565b5050506200006a600082846200009460201b60201c565b600580546001600160a01b0319166001600160a01b039290921691909117905550620004a7915050565b6001600160a01b038316620000c3578060026000828254620000b791906200047f565b909155506200013a9050565b6001600160a01b038316600090815260208190526040902054818110156200011b5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640160405180910390fd5b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001585760028054829003905562000177565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001bd91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f257600080fd5b81516001600160401b03808211156200020f576200020f620001ca565b604051601f8301601f19908116603f011681019082821181831017156200023a576200023a620001ca565b816040528381526020925086838588010111156200025757600080fd5b600091505b838210156200027b57858201830151818301840152908201906200025c565b600093810190920192909252949350505050565b60008060008060808587031215620002a657600080fd5b84516001600160401b0380821115620002be57600080fd5b620002cc88838901620001e0565b95506020870151915080821115620002e357600080fd5b50620002f287828801620001e0565b60408701516060880151919550935090506001600160a01b03811681146200031957600080fd5b939692955090935050565b600181811c908216806200033957607f821691505b6020821081036200035a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ae57600081815260208120601f850160051c81016020861015620003895750805b601f850160051c820191505b81811015620003aa5782815560010162000395565b5050505b505050565b81516001600160401b03811115620003cf57620003cf620001ca565b620003e781620003e0845462000324565b8462000360565b602080601f8311600181146200041f5760008415620004065750858301515b600019600386901b1c1916600185901b178555620003aa565b600085815260208120601f198616915b8281101562000450578886015182559484019460019091019084016200042f565b50858210156200046f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620004a157634e487b7160e01b600052601160045260246000fd5b92915050565b61084280620004b76000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ce516da116100715780638ce516da1461015757806395d89b411461016c578063a9059cbb14610174578063b2bdfa7b14610187578063dd62ed3e146101b2578063f2fde38b146101eb57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f57806370a082311461012e575b600080fd5b6100c16101fe565b6040516100ce919061068c565b60405180910390f35b6100ea6100e53660046106f6565b610290565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610720565b6102aa565b604051601281526020016100ce565b6100fe61013c36600461075c565b6001600160a01b031660009081526020819052604090205490565b61016a610165366004610720565b6102ce565b005b6100c1610329565b6100ea6101823660046106f6565b610338565b60055461019a906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100fe6101c036600461077e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61016a6101f936600461075c565b610346565b60606003805461020d906107b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610239906107b1565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b5050505050905090565b60003361029e8185856103ae565b60019150505b92915050565b6000336102b88582856103bb565b6102c3858585610439565b506001949350505050565b6005546001600160a01b031633146103195760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b61032483838361048d565b505050565b60606004805461020d906107b1565b60003361029e818585610439565b6005546001600160a01b0316331461038c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610310565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b61032483838360016105b7565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610433578181101561042457604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610310565b610433848484840360006105b7565b50505050565b6001600160a01b03831661046357604051634b637e8f60e11b815260006004820152602401610310565b6001600160a01b0382166103195760405163ec442f0560e01b815260006004820152602401610310565b6001600160a01b0383166104b85780600260008282546104ad91906107eb565b9091555061052a9050565b6001600160a01b0383166000908152602081905260409020548181101561050b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610310565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661054657600280548290039055610565565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105aa91815260200190565b60405180910390a3505050565b6001600160a01b0384166105e15760405163e602df0560e01b815260006004820152602401610310565b6001600160a01b03831661060b57604051634a1406b160e11b815260006004820152602401610310565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561043357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161067e91815260200190565b60405180910390a350505050565b600060208083528351808285015260005b818110156106b95785810183015185820160400152820161069d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106f157600080fd5b919050565b6000806040838503121561070957600080fd5b610712836106da565b946020939093013593505050565b60008060006060848603121561073557600080fd5b61073e846106da565b925061074c602085016106da565b9150604084013590509250925092565b60006020828403121561076e57600080fd5b610777826106da565b9392505050565b6000806040838503121561079157600080fd5b61079a836106da565b91506107a8602084016106da565b90509250929050565b600181811c908216806107c557607f821691505b6020821081036107e557634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a457634e487b7160e01b600052601160045260246000fdfea2646970667358221220dc5af1d03b1d2a96e2601486572345c1cf306b1488790f19bb6cf4c57889efb764736f6c63430008140033",
    "sourceMap": "237:914:27:-:0;;;332:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;472:4;478:6;2012:5:17;:13;472:4:27;2012:5:17;:13;:::i;:::-;-1:-1:-1;2036:7:17;:17;2046:7;2036;:17;:::i;:::-;;1945:116;;497:40:27::1;513:1;517:5;524:12;497:7;;;:40;;:::i;:::-;548:6;:14:::0;;-1:-1:-1;;;;;;548:14:27::1;-1:-1:-1::0;;;;;548:14:27;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;237:914:27;;-1:-1:-1;;237:914:27;6458:1135:17;-1:-1:-1;;;;;6548:18:17;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6544:552:17;;-1:-1:-1;6544:552:17;;-1:-1:-1;;;;;6762:15:17;;6740:19;6762:15;;;;;;;;;;;6796:19;;;6792:117;;;6843:50;;-1:-1:-1;;;6843:50:17;;-1:-1:-1;;;;;4823:32:30;;6843:50:17;;;4805:51:30;4872:18;;;4865:34;;;4915:18;;;4908:34;;;4778:18;;6843:50:17;;;;;;;6792:117;-1:-1:-1;;;;;7032:15:17;;:9;:15;;;;;;;;;;7050:19;;;;7032:37;;6544:552;-1:-1:-1;;;;;7112:16:17;;7108:435;;7278:12;:21;;;;;;;7108:435;;;-1:-1:-1;;;;;7494:13:17;;:9;:13;;;;;;;;;;:22;;;;;;7108:435;7575:2;-1:-1:-1;;;;;7560:25:17;7569:4;-1:-1:-1;;;;;7560:25:17;;7579:5;7560:25;;;;5099::30;;5087:2;5072:18;;4953:177;7560:25:17;;;;;;;;6458:1135;;;:::o;14:127:30:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:30;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:30;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:30:o;991:791::-;1108:6;1116;1124;1132;1185:3;1173:9;1164:7;1160:23;1156:33;1153:53;;;1202:1;1199;1192:12;1153:53;1229:16;;-1:-1:-1;;;;;1294:14:30;;;1291:34;;;1321:1;1318;1311:12;1291:34;1344:61;1397:7;1388:6;1377:9;1373:22;1344:61;:::i;:::-;1334:71;;1451:2;1440:9;1436:18;1430:25;1414:41;;1480:2;1470:8;1467:16;1464:36;;;1496:1;1493;1486:12;1464:36;;1519:63;1574:7;1563:8;1552:9;1548:24;1519:63;:::i;:::-;1622:2;1607:18;;1601:25;1669:2;1654:18;;1648:25;1509:73;;-1:-1:-1;1601:25:30;-1:-1:-1;1648:25:30;-1:-1:-1;;;;;;1702:31:30;;1692:42;;1682:70;;1748:1;1745;1738:12;1682:70;991:791;;;;-1:-1:-1;991:791:30;;-1:-1:-1;;991:791:30:o;1787:380::-;1866:1;1862:12;;;;1909;;;1930:61;;1984:4;1976:6;1972:17;1962:27;;1930:61;2037:2;2029:6;2026:14;2006:18;2003:38;2000:161;;2083:10;2078:3;2074:20;2071:1;2064:31;2118:4;2115:1;2108:15;2146:4;2143:1;2136:15;2000:161;;1787:380;;;:::o;2298:545::-;2400:2;2395:3;2392:11;2389:448;;;2436:1;2461:5;2457:2;2450:17;2506:4;2502:2;2492:19;2576:2;2564:10;2560:19;2557:1;2553:27;2547:4;2543:38;2612:4;2600:10;2597:20;2594:47;;;-1:-1:-1;2635:4:30;2594:47;2690:2;2685:3;2681:12;2678:1;2674:20;2668:4;2664:31;2654:41;;2745:82;2763:2;2756:5;2753:13;2745:82;;;2808:17;;;2789:1;2778:13;2745:82;;;2749:3;;;2389:448;2298:545;;;:::o;3019:1352::-;3139:10;;-1:-1:-1;;;;;3161:30:30;;3158:56;;;3194:18;;:::i;:::-;3223:97;3313:6;3273:38;3305:4;3299:11;3273:38;:::i;:::-;3267:4;3223:97;:::i;:::-;3375:4;;3439:2;3428:14;;3456:1;3451:663;;;;4158:1;4175:6;4172:89;;;-1:-1:-1;4227:19:30;;;4221:26;4172:89;-1:-1:-1;;2976:1:30;2972:11;;;2968:24;2964:29;2954:40;3000:1;2996:11;;;2951:57;4274:81;;3421:944;;3451:663;2245:1;2238:14;;;2282:4;2269:18;;-1:-1:-1;;3487:20:30;;;3605:236;3619:7;3616:1;3613:14;3605:236;;;3708:19;;;3702:26;3687:42;;3800:27;;;;3768:1;3756:14;;;;3635:19;;3605:236;;;3609:3;3869:6;3860:7;3857:19;3854:201;;;3930:19;;;3924:26;-1:-1:-1;;4013:1:30;4009:14;;;4025:3;4005:24;4001:37;3997:42;3982:58;3967:74;;3854:201;-1:-1:-1;;;;;4101:1:30;4085:14;;;4081:22;4068:36;;-1:-1:-1;3019:1352:30:o;4376:222::-;4441:9;;;4462:10;;;4459:133;;;4514:10;4509:3;4505:20;4502:1;4495:31;4549:4;4546:1;4539:15;4577:4;4574:1;4567:15;4459:133;4376:222;;;;:::o;4953:177::-;237:914:27;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ce516da116100715780638ce516da1461015757806395d89b411461016c578063a9059cbb14610174578063b2bdfa7b14610187578063dd62ed3e146101b2578063f2fde38b146101eb57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f57806370a082311461012e575b600080fd5b6100c16101fe565b6040516100ce919061068c565b60405180910390f35b6100ea6100e53660046106f6565b610290565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610720565b6102aa565b604051601281526020016100ce565b6100fe61013c36600461075c565b6001600160a01b031660009081526020819052604090205490565b61016a610165366004610720565b6102ce565b005b6100c1610329565b6100ea6101823660046106f6565b610338565b60055461019a906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100fe6101c036600461077e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61016a6101f936600461075c565b610346565b60606003805461020d906107b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610239906107b1565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b5050505050905090565b60003361029e8185856103ae565b60019150505b92915050565b6000336102b88582856103bb565b6102c3858585610439565b506001949350505050565b6005546001600160a01b031633146103195760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b61032483838361048d565b505050565b60606004805461020d906107b1565b60003361029e818585610439565b6005546001600160a01b0316331461038c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610310565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b61032483838360016105b7565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610433578181101561042457604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610310565b610433848484840360006105b7565b50505050565b6001600160a01b03831661046357604051634b637e8f60e11b815260006004820152602401610310565b6001600160a01b0382166103195760405163ec442f0560e01b815260006004820152602401610310565b6001600160a01b0383166104b85780600260008282546104ad91906107eb565b9091555061052a9050565b6001600160a01b0383166000908152602081905260409020548181101561050b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610310565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661054657600280548290039055610565565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105aa91815260200190565b60405180910390a3505050565b6001600160a01b0384166105e15760405163e602df0560e01b815260006004820152602401610310565b6001600160a01b03831661060b57604051634a1406b160e11b815260006004820152602401610310565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561043357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161067e91815260200190565b60405180910390a350505050565b600060208083528351808285015260005b818110156106b95785810183015185820160400152820161069d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106f157600080fd5b919050565b6000806040838503121561070957600080fd5b610712836106da565b946020939093013593505050565b60008060006060848603121561073557600080fd5b61073e846106da565b925061074c602085016106da565b9150604084013590509250925092565b60006020828403121561076e57600080fd5b610777826106da565b9392505050565b6000806040838503121561079157600080fd5b61079a836106da565b91506107a8602084016106da565b90509250929050565b600181811c908216806107c557607f821691505b6020821081036107e557634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a457634e487b7160e01b600052601160045260246000fdfea2646970667358221220dc5af1d03b1d2a96e2601486572345c1cf306b1488790f19bb6cf4c57889efb764736f6c63430008140033",
    "sourceMap": "237:914:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4424:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:30;;1162:22;1144:41;;1132:2;1117:18;4424:190:17;1004:187:30;3233:99:17;3312:12;;3233:99;;;1342:25:30;;;1330:2;1315:18;3233:99:17;1196:177:30;5192:249:17;;;;;;:::i;:::-;;:::i;3084:84::-;;;3158:2;1853:36:30;;1841:2;1826:18;3084:84:17;1711:184:30;3395:118:17;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:18:17;3460:7;3487:18;;;;;;;;;;;;3395:118;719:117:27;;;;;;:::i;:::-;;:::i;:::-;;2341:95:17;;;:::i;3718:182::-;;;;;;:::i;:::-;;:::i;302:21:27:-;;;;;-1:-1:-1;;;;;302:21:27;;;;;;-1:-1:-1;;;;;2255:32:30;;;2237:51;;2225:2;2210:18;302:21:27;2091:203:30;3963:142:17;;;;;;:::i;:::-;-1:-1:-1;;;;;4070:18:17;;;4043:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3963:142;951:86:27;;;;;;:::i;:::-;;:::i;2131:91:17:-;2176:13;2209:5;2202:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91;:::o;4424:190::-;4497:4;752:10:23;4553:31:17;752:10:23;4569:7:17;4578:5;4553:8;:31::i;:::-;4602:4;4595:11;;;4424:190;;;;;:::o;5192:249::-;5279:4;752:10:23;5337:37:17;5353:4;752:10:23;5368:5:17;5337:15;:37::i;:::-;5385:26;5395:4;5401:2;5405:5;5385:9;:26::i;:::-;-1:-1:-1;5429:4:17;;5192:249;-1:-1:-1;;;;5192:249:17:o;719:117:27:-;1108:6;;-1:-1:-1;;;;;1108:6:27;1093:10;1085:29;1077:51;;;;-1:-1:-1;;;1077:51:27;;3151:2:30;1077:51:27;;;3133:21:30;3190:1;3170:18;;;3163:29;-1:-1:-1;;;3208:18:30;;;3201:39;3257:18;;1077:51:27;;;;;;;;;804:24:::1;812:4;818:2;822:5;804:7;:24::i;:::-;719:117:::0;;;:::o;2341:95:17:-;2388:13;2421:7;2414:14;;;;;:::i;3718:182::-;3787:4;752:10:23;3843:27:17;752:10:23;3860:2:17;3864:5;3843:9;:27::i;951:86:27:-;1108:6;;-1:-1:-1;;;;;1108:6:27;1093:10;1085:29;1077:51;;;;-1:-1:-1;;;1077:51:27;;3151:2:30;1077:51:27;;;3133:21:30;3190:1;3170:18;;;3163:29;-1:-1:-1;;;3208:18:30;;;3201:39;3257:18;;1077:51:27;2949:332:30;1077:51:27;1018:6:::1;:11:::0;;-1:-1:-1;;;;;;1018:11:27::1;-1:-1:-1::0;;;;;1018:11:27;;;::::1;::::0;;;::::1;::::0;;951:86::o;9251:130:17:-;9336:37;9345:5;9352:7;9361:5;9368:4;9336:8;:37::i;10967:487::-;-1:-1:-1;;;;;4070:18:17;;;11067:24;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11134:37:17;;11130:317;;11211:5;11192:16;:24;11188:132;;;11244:60;;-1:-1:-1;;;11244:60:17;;-1:-1:-1;;;;;3506:32:30;;11244:60:17;;;3488:51:30;3555:18;;;3548:34;;;3598:18;;;3591:34;;;3461:18;;11244:60:17;3286:345:30;11188:132:17;11363:57;11372:5;11379:7;11407:5;11388:16;:24;11414:5;11363:8;:57::i;:::-;11056:398;10967:487;;;:::o;5826:308::-;-1:-1:-1;;;;;5910:18:17;;5906:88;;5952:30;;-1:-1:-1;;;5952:30:17;;5979:1;5952:30;;;2237:51:30;2210:18;;5952:30:17;2091:203:30;5906:88:17;-1:-1:-1;;;;;6008:16:17;;6004:88;;6048:32;;-1:-1:-1;;;6048:32:17;;6077:1;6048:32;;;2237:51:30;2210:18;;6048:32:17;2091:203:30;6458:1135:17;-1:-1:-1;;;;;6548:18:17;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6544:552:17;;-1:-1:-1;6544:552:17;;-1:-1:-1;;;;;6762:15:17;;6740:19;6762:15;;;;;;;;;;;6796:19;;;6792:117;;;6843:50;;-1:-1:-1;;;6843:50:17;;-1:-1:-1;;;;;3506:32:30;;6843:50:17;;;3488:51:30;3555:18;;;3548:34;;;3598:18;;;3591:34;;;3461:18;;6843:50:17;3286:345:30;6792:117:17;-1:-1:-1;;;;;7032:15:17;;:9;:15;;;;;;;;;;7050:19;;;;7032:37;;6544:552;-1:-1:-1;;;;;7112:16:17;;7108:435;;7278:12;:21;;;;;;;7108:435;;;-1:-1:-1;;;;;7494:13:17;;:9;:13;;;;;;;;;;:22;;;;;;7108:435;7575:2;-1:-1:-1;;;;;7560:25:17;7569:4;-1:-1:-1;;;;;7560:25:17;;7579:5;7560:25;;;;1342::30;;1330:2;1315:18;;1196:177;7560:25:17;;;;;;;;6458:1135;;;:::o;10232:443::-;-1:-1:-1;;;;;10345:19:17;;10341:91;;10388:32;;-1:-1:-1;;;10388:32:17;;10417:1;10388:32;;;2237:51:30;2210:18;;10388:32:17;2091:203:30;10341:91:17;-1:-1:-1;;;;;10446:21:17;;10442:92;;10491:31;;-1:-1:-1;;;10491:31:17;;10519:1;10491:31;;;2237:51:30;2210:18;;10491:31:17;2091:203:30;10442:92:17;-1:-1:-1;;;;;10544:18:17;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10590:78;;;;10641:7;-1:-1:-1;;;;;10625:31:17;10634:5;-1:-1:-1;;;;;10625:31:17;;10650:5;10625:31;;;;1342:25:30;;1330:2;1315:18;;1196:177;10625:31:17;;;;;;;;10232:443;;;;:::o;14:548:30:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:30;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:30:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:30:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;3636:222::-;3701:9;;;3722:10;;;3719:133;;;3774:10;3769:3;3765:20;3762:1;3755:31;3809:4;3806:1;3799:15;3837:4;3834:1;3827:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "_owner()": "b2bdfa7b",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "update(address,address,uint256)": "8ce516da"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfer Ownership Can also renounce by transfering to burn address\"},\"update(address,address,uint256)\":{\"details\":\"All changes to transfers are modified here as per openzeppelin spec Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/base/tokenFactory/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@cryptoalgebra/=lib/@cryptoalgebra/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af\",\"dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x36560926db8fa096a799a54143e48ff23002e115d4a8380e31def8f8aab0efd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c289d6f0ededdbf5cf5f885adf2d41b76d6fe602946273cab10830f64906af9f\",\"dweb:/ipfs/Qmd81LQLGNmfs3rxwGLHUSJ2d3w5Z4aooxtRkCe7XDDEc8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xcbb604d28d5f88a843c15f561334d36186f272d7099ae5daa859610871bd505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb4a8d2d4884c7dd1917ba022867a3f37cfd88252bb0d8544eb46bfa3a1200af\",\"dweb:/ipfs/Qmdoauv9ffth9R63ZwSQ9HR9LAtVWGsEz8ByTB1eSsCMuL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0e0796517afb4347534d93ede634036a1621b8486f06501847402357498c0726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a3961c19e2887a4fff4644e5284b53d1202e899e161b68771304bfc74bade6\",\"dweb:/ipfs/Qmb1Di8UfhT9QdBAPGiDBX8FYoR9tXd1YWUTUup8GGhg21\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"src/base/tokenFactory/Token.sol\":{\"keccak256\":\"0xa16423b84d289b4ce5dfda93dcfc66ebbf2438209ded665a4b3ea6e24dd4c2a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50e1e4c84bf977d3c37bd685cfac381afa4d1131706756ff268f3964a1f787de\",\"dweb:/ipfs/QmYX6CmgkLfwVR2nmUv2B32MoG6rqxxGLXJZonxJ99cMp9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ticker",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "update"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfer Ownership Can also renounce by transfering to burn address"
          },
          "update(address,address,uint256)": {
            "details": "All changes to transfers are modified here as per openzeppelin spec Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@cryptoalgebra/=lib/@cryptoalgebra/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/base/tokenFactory/Token.sol": "Token"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d",
        "urls": [
          "bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b",
          "dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50",
        "urls": [
          "bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af",
          "dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3",
        "urls": [
          "bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204",
          "dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b",
        "urls": [
          "bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6",
          "dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x36560926db8fa096a799a54143e48ff23002e115d4a8380e31def8f8aab0efd0",
        "urls": [
          "bzz-raw://c289d6f0ededdbf5cf5f885adf2d41b76d6fe602946273cab10830f64906af9f",
          "dweb:/ipfs/Qmd81LQLGNmfs3rxwGLHUSJ2d3w5Z4aooxtRkCe7XDDEc8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xcbb604d28d5f88a843c15f561334d36186f272d7099ae5daa859610871bd505e",
        "urls": [
          "bzz-raw://cb4a8d2d4884c7dd1917ba022867a3f37cfd88252bb0d8544eb46bfa3a1200af",
          "dweb:/ipfs/Qmdoauv9ffth9R63ZwSQ9HR9LAtVWGsEz8ByTB1eSsCMuL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x0e0796517afb4347534d93ede634036a1621b8486f06501847402357498c0726",
        "urls": [
          "bzz-raw://a6a3961c19e2887a4fff4644e5284b53d1202e899e161b68771304bfc74bade6",
          "dweb:/ipfs/Qmb1Di8UfhT9QdBAPGiDBX8FYoR9tXd1YWUTUup8GGhg21"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b",
        "urls": [
          "bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26",
          "dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws"
        ],
        "license": "MIT"
      },
      "src/base/tokenFactory/Token.sol": {
        "keccak256": "0xa16423b84d289b4ce5dfda93dcfc66ebbf2438209ded665a4b3ea6e24dd4c2a9",
        "urls": [
          "bzz-raw://50e1e4c84bf977d3c37bd685cfac381afa4d1131706756ff268f3964a1f787de",
          "dweb:/ipfs/QmYX6CmgkLfwVR2nmUv2B32MoG6rqxxGLXJZonxJ99cMp9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/base/tokenFactory/Token.sol",
    "id": 42188,
    "exportedSymbols": {
      "ERC20": [
        41164
      ],
      "SafeERC20": [
        41594
      ],
      "Token": [
        42187
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1120:27",
    "nodes": [
      {
        "id": 42098,
        "nodeType": "PragmaDirective",
        "src": "33:24:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 42100,
        "nodeType": "ImportDirective",
        "src": "61:92:27",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42188,
        "sourceUnit": 41595,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42099,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41594,
              "src": "69:9:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42102,
        "nodeType": "ImportDirective",
        "src": "155:78:27",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42188,
        "sourceUnit": 41165,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42101,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41164,
              "src": "163:5:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42187,
        "nodeType": "ContractDefinition",
        "src": "237:914:27",
        "nodes": [
          {
            "id": 42108,
            "nodeType": "UsingForDirective",
            "src": "268:26:27",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 42105,
              "name": "SafeERC20",
              "nameLocations": [
                "274:9:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41594,
              "src": "274:9:27"
            },
            "typeName": {
              "id": 42107,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42106,
                "name": "ERC20",
                "nameLocations": [
                  "288:5:27"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41164,
                "src": "288:5:27"
              },
              "referencedDeclaration": 41164,
              "src": "288:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$41164",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 42110,
            "nodeType": "VariableDeclaration",
            "src": "302:21:27",
            "nodes": [],
            "constant": false,
            "functionSelector": "b2bdfa7b",
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "317:6:27",
            "scope": 42187,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42109,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 42139,
            "nodeType": "FunctionDefinition",
            "src": "332:238:27",
            "nodes": [],
            "body": {
              "id": 42138,
              "nodeType": "Block",
              "src": "486:84:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 42128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "513:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 42127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "505:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "505:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "505:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42130,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42118,
                        "src": "517:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42131,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42116,
                        "src": "524:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42125,
                      "name": "_update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40971,
                      "src": "497:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 42132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42133,
                  "nodeType": "ExpressionStatement",
                  "src": "497:40:27"
                },
                {
                  "expression": {
                    "id": 42136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42134,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42110,
                      "src": "548:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42135,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42118,
                      "src": "557:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "548:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42137,
                  "nodeType": "ExpressionStatement",
                  "src": "548:14:27"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42121,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42112,
                    "src": "472:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 42122,
                    "name": "ticker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42114,
                    "src": "478:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 42123,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 42120,
                  "name": "ERC20",
                  "nameLocations": [
                    "466:5:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41164,
                  "src": "466:5:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "466:19:27"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 42119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42112,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "368:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42139,
                  "src": "354:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42111,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42114,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "397:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42139,
                  "src": "383:20:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42116,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "422:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42139,
                  "src": "414:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42118,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "453:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42139,
                  "src": "445:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "343:122:27"
            },
            "returnParameters": {
              "id": 42124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:27"
            },
            "scope": 42187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42158,
            "nodeType": "FunctionDefinition",
            "src": "719:117:27",
            "nodes": [],
            "body": {
              "id": 42157,
              "nodeType": "Block",
              "src": "793:43:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42152,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42142,
                        "src": "812:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42153,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42144,
                        "src": "818:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42154,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42146,
                        "src": "822:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42151,
                      "name": "_update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40971,
                      "src": "804:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 42155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:24:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42156,
                  "nodeType": "ExpressionStatement",
                  "src": "804:24:27"
                }
              ]
            },
            "documentation": {
              "id": 42140,
              "nodeType": "StructuredDocumentation",
              "src": "578:135:27",
              "text": " @dev All changes to transfers are modified here as per openzeppelin spec\n Emits a {Transfer} event."
            },
            "functionSelector": "8ce516da",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 42149,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42148,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "783:9:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42186,
                  "src": "783:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "783:9:27"
              }
            ],
            "name": "update",
            "nameLocation": "728:6:27",
            "parameters": {
              "id": 42147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42142,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "743:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42158,
                  "src": "735:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42144,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "757:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42158,
                  "src": "749:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42146,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "769:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42158,
                  "src": "761:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "734:41:27"
            },
            "returnParameters": {
              "id": 42150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:0:27"
            },
            "scope": 42187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42171,
            "nodeType": "FunctionDefinition",
            "src": "951:86:27",
            "nodes": [],
            "body": {
              "id": 42170,
              "nodeType": "Block",
              "src": "1007:30:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42166,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42110,
                      "src": "1018:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42167,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42161,
                      "src": "1027:2:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1018:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42169,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:11:27"
                }
              ]
            },
            "documentation": {
              "id": 42159,
              "nodeType": "StructuredDocumentation",
              "src": "844:101:27",
              "text": " @dev Transfer Ownership\n Can also renounce by transfering to burn address"
            },
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 42164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42163,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "997:9:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42186,
                  "src": "997:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "997:9:27"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "960:17:27",
            "parameters": {
              "id": 42162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42161,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "986:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 42171,
                  "src": "978:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "977:12:27"
            },
            "returnParameters": {
              "id": 42165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:0:27"
            },
            "scope": 42187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42186,
            "nodeType": "ModifierDefinition",
            "src": "1045:103:27",
            "nodes": [],
            "body": {
              "id": 42185,
              "nodeType": "Block",
              "src": "1066:82:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 42180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 42176,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1093:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 42177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1097:6:27",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1093:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 42175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1085:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 42174,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1085:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1085:19:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 42179,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42110,
                          "src": "1108:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1085:29:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206f776e6572",
                        "id": 42181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                          "typeString": "literal_string \"Not owner\""
                        },
                        "value": "Not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                          "typeString": "literal_string \"Not owner\""
                        }
                      ],
                      "id": 42173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1077:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:51:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42183,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:51:27"
                },
                {
                  "id": 42184,
                  "nodeType": "PlaceholderStatement",
                  "src": "1139:1:27"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "1054:9:27",
            "parameters": {
              "id": 42172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:2:27"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42103,
              "name": "ERC20",
              "nameLocations": [
                "255:5:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41164,
              "src": "255:5:27"
            },
            "id": 42104,
            "nodeType": "InheritanceSpecifier",
            "src": "255:5:27"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42187,
          41164,
          40554,
          41268,
          41242,
          41877
        ],
        "name": "Token",
        "nameLocation": "246:5:27",
        "scope": 42188,
        "usedErrors": [
          40524,
          40529,
          40534,
          40543,
          40548,
          40553
        ],
        "usedEvents": [
          41176,
          41185
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 27
}